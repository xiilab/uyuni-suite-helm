# Default values for uyuni-suite-helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

uyuni:
  common:
    serviceAccount:
      # Specifies whether a service account should be created
      create: true
      # Annotations to add to the service account
      annotations: { }
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      name: ""

    ingress:
      enabled: false
      className: ""
      annotations: { }
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      hosts:
        - host: uyuni-suite.xiilab.com
          paths:
            - path: /
              pathType: ImplementationSpecific
              backend:
                service:
                  name: keycloak-external
                  port:
                    number: 80
      tls: [ ]
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local

  frontend:
    replicaCount: 1

    image:
      repository: xiilab/uyuni-suite-frontend
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: "0.3.8-stag"

    imagePullSecrets: []
    nameOverride: ""
    fullnameOverride: ""

    podAnnotations: {}

    podSecurityContext: {}
    # fsGroup: 2000

    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

    ## @param uyuni.batch.env environment variables to be set on MariaDB primary containers
    ## E.g.
    ## Envs:
    ##  - name: TZ
    ##    value: "Europe/Paris"
    ##
    env: []

    service:
      type: ClusterIP
      port: 80

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80

    nodeSelector: {}

    tolerations: []

    affinity: {}

  core:
    replicaCount: 1

    image:
      repository: xiilab/uyuni-manager-core
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: "0.3.1-stag"

    imagePullSecrets: []
    nameOverride: ""
    fullnameOverride: ""

    podAnnotations: {}

    podSecurityContext: {}
      # fsGroup: 2000

    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000

    ## @param uyuni.batch.env environment variables to be set on MariaDB primary containers
    ## E.g.
    ## Envs:
    ##  - name: TZ
    ##    value: "Europe/Paris"
    ##
    env:
    - name: SPRING_PROFILES_ACTIVE
      value: dev
    - name: KEYCLOAK_REALM
      value: uyuni
    - name: KEYCLOAK_AUTHSERVERURL
      value: http://uyuni-suite.xiilab.com:32080/auth
    - name: KEYCLOAK_RESOURCE
      value: uyuni
    - name: K8S_NAMESPACE
      value: uyuni-suite
    - name: UYUNIHOST
      value: 192.168.1.235

    service:
      type: ClusterIP
      port: 8080

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80

    nodeSelector: {}

    tolerations: []

    affinity: {}

    persistence:
      resourcePolicy: "keep"
      existingClaim: ""
      # Specify the "storageClass" used to provision the volume. Or the default
      # StorageClass will be used (the default).
      # Set it to "-" to disable dynamic provisioning
      storageClass: "nfs-client"
      subPath: ""
      accessMode: ReadWriteOnce
      size: 5Gi
      annotations: {}

  batch:
    replicaCount: 1

    image:
      repository: xiilab/uyuni-manager-batch
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: "0.3.1-stag"

    imagePullSecrets: []
    nameOverride: ""
    fullnameOverride: ""

    podAnnotations: {}

    podSecurityContext: {}
    # fsGroup: 2000

    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
    # runAsUser: 1000

    ## @param uyuni.batch.env environment variables to be set on MariaDB primary containers
    ## E.g.
    ## Envs:
    ##  - name: TZ
    ##    value: "Europe/Paris"
    ##
    env:
    - name: SPRING_PROFILES_ACTIVE
      value: dev
    - name: KEYCLOAK_REALM
      value: uyuni
    - name: KEYCLOAK_AUTHSERVERURL
      value: http://uyuni-suite.xiilab.com:32080/auth
    - name: KEYCLOAK_RESOURCE
      value: uyuni
    - name: K8S_NAMESPACE
      value: uyuni-suite

    service:
      type: ClusterIP
      port: 8080

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
    #   memory: 128Mi

    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80

    nodeSelector: {}

    tolerations: []

    affinity: {}

  noti:
    replicaCount: 1

    image:
      repository: xiilab/uyuni-manager-noti
      pullPolicy: IfNotPresent
      # Overrides the image tag whose default is the chart appVersion.
      tag: "0.3.1-stag"

    imagePullSecrets: []
    nameOverride: ""
    fullnameOverride: ""

    podAnnotations: {}

    podSecurityContext: {}
    # fsGroup: 2000

    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

    ## @param uyuni.batch.env environment variables to be set on MariaDB primary containers
    ## E.g.
    ## Envs:
    ##  - name: TZ
    ##    value: "Europe/Paris"
    ##
    env:
    - name: SPRING_PROFILES_ACTIVE
      value: dev
    - name: SPRING_KAFKA_CONSUMER_BOOTSTRAP-SERVERS
      value: kafka-cp-kafka.kafka.svc:9092
    - name: SPRING_KAFKA_PRODUCER_BOOTSTRAP-SERVERS
      value: kafka-cp-kafka.kafka.svc:9092

    service:
      type: ClusterIP
      port: 8080

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
    #   cpu: 100m
    #   memory: 128Mi

    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80

    nodeSelector: {}

    tolerations: []

    affinity: {}

mariadb:
  ## @param nameOverride String to partially override mariadb.fullname
  ##
  nameOverride: ""
  ## @param fullnameOverride String to fully override mariadb.fullname
  ##
  fullnameOverride: "mariadb"
  ## @param architecture MariaDB architecture (`standalone` or `replication`)
  ##
  architecture: standalone
  ## MariaDB Authentication parameters
  ##
  auth:
    ## @param auth.rootPassword Password for the `root` user. Ignored if existing secret is provided.
    ## ref: https://github.com/bitnami/containers/tree/main/bitnami/mariadb#setting-the-root-password-on-first-run
    ##
    rootPassword: "root"
    ## @param auth.database Name for a custom database to create
    ## ref: https://github.com/bitnami/containers/blob/main/bitnami/mariadb/README.md#creating-a-database-on-first-run
    ##
    database: uyuni
    ## @param auth.username Name for a custom user to create
    ## ref: https://github.com/bitnami/containers/blob/main/bitnami/mariadb/README.md#creating-a-database-user-on-first-run
    ##
    username: "uyuni"
    ## @param auth.password Password for the new user. Ignored if existing secret is provided
    ##
    password: "uyuniPassword3#"
    ## @param auth.replicationUser MariaDB replication user
    ## ref: https://github.com/bitnami/containers/tree/main/bitnami/mariadb#setting-up-a-replication-cluster
    ##
    replicationUser: replicator
    ## @param auth.replicationPassword MariaDB replication user password. Ignored if existing secret is provided
    ## ref: https://github.com/bitnami/containers/tree/main/bitnami/mariadb#setting-up-a-replication-cluster
    ##
    replicationPassword: ""

  primary:
    configuration: |-
      [mysqld]
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mariadb
      plugin_dir=/opt/bitnami/mariadb/plugin
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      tmpdir=/opt/bitnami/mariadb/tmp
      max_allowed_packet=16M
      bind-address=*
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
      log-error=/opt/bitnami/mariadb/logs/mysqld.log
      character-set-server=UTF8
      collation-server=utf8_general_ci
      slow_query_log=0
      slow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log
      long_query_time=10.0

      [client]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      default-character-set=UTF8
      plugin_dir=/opt/bitnami/mariadb/plugin

      [manager]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid

    persistence:
      ## @param primary.persistence.enabled Enable persistence on MariaDB primary replicas using a `PersistentVolumeClaim`. If false, use emptyDir
      ##
      enabled: true
      ## @param primary.persistence.existingClaim Name of an existing `PersistentVolumeClaim` for MariaDB primary replicas
      ## NOTE: When it's set the rest of persistence parameters are ignored
      ##
      existingClaim: ""
      ## @param primary.persistence.subPath Subdirectory of the volume to mount at
      ##
      subPath: ""
      ## @param primary.persistence.storageClass MariaDB primary persistent volume storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      storageClass: ""
      ## @param primary.persistence.annotations MariaDB primary persistent volume claim annotations
      ##
      annotations: { }
      ## @param primary.persistence.accessModes MariaDB primary persistent volume access Modes
      ##
      accessModes:
        - ReadWriteOnce
      ## @param primary.persistence.size MariaDB primary persistent volume size
      ##
      size: 8Gi
      ## @param primary.persistence.selector Selector to match an existing Persistent Volume
      ## selector:
      ##   matchLabels:
      ##     app: my-app
      ##
      selector: { }

  secondary:
    ## @param secondary.configuration [string] MariaDB Secondary configuration to be injected as ConfigMap
    ## ref: https://mysql.com/kb/en/mysql/configuring-mysql-with-mycnf/#example-of-configuration-file
    ##
    configuration: |-
      [mysqld]
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mariadb
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      tmpdir=/opt/bitnami/mariadb/tmp
      max_allowed_packet=16M
      bind-address=0.0.0.0
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid
      log-error=/opt/bitnami/mariadb/logs/mysqld.log
      character-set-server=UTF8
      collation-server=utf8_general_ci
      slow_query_log=0
      slow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log
      long_query_time=10.0

      [client]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      default-character-set=UTF8

      [manager]
      port=3306
      socket=/opt/bitnami/mariadb/tmp/mysql.sock
      pid-file=/opt/bitnami/mariadb/tmp/mysqld.pid

    persistence:
      ## @param secondary.persistence.enabled Enable persistence on MariaDB secondary replicas using a `PersistentVolumeClaim`
      ##
      enabled: true
      ## @param secondary.persistence.subPath Subdirectory of the volume to mount at
      ##
      subPath: ""
      ## @param secondary.persistence.storageClass MariaDB secondary persistent volume storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      storageClass: ""
      ## @param secondary.persistence.annotations MariaDB secondary persistent volume claim annotations
      ##
      annotations: { }
      ## @param secondary.persistence.accessModes MariaDB secondary persistent volume access Modes
      ##
      accessModes:
        - ReadWriteOnce
      ## @param secondary.persistence.size MariaDB secondary persistent volume size
      ##
      size: 8Gi
      ## @param secondary.persistence.selector Selector to match an existing Persistent Volume
      ## selector:
      ##   matchLabels:
      ##     app: my-app
      ##
      selector: { }
